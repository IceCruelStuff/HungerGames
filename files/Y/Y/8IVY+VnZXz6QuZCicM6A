1660614403
ijeqzL8hUX%3Acc4837fc089fe764b665a10d04f9525c-ffef559b6960ad1a6b75ab6383b4923b
s:44964:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"ffef559b6960ad1a6b75ab6383b4923b";s:39:" phpDocumentor\Reflection\Php\File name";s:22:"HungerGamesCommand.php";s:39:" phpDocumentor\Reflection\Php\File path";s:46:"src/HungerGames/Command/HungerGamesCommand.php";s:41:" phpDocumentor\Reflection\Php\File source";s:17173:"<?php

namespace HungerGames\Command;

use HungerGames\Lib\Utils\Exc;
use HungerGames\Lib\Utils\Info;
use HungerGames\Lib\Utils\Msg;
use HungerGames\Loader;
use HungerGames\Object\HungerGames;
use HungerGames\Tasks\WaitingForPlayersTask;
use pocketmine\command\Command;
use pocketmine\command\CommandSender;
use pocketmine\command\PluginIdentifiableCommand;
use pocketmine\Player;
use pocketmine\plugin\Plugin;

class HungerGamesCommand extends Command implements PluginIdentifiableCommand {

    /** @var Loader */
    private $hungerGamesAPI;

    public function __construct(Loader $loader) {
        parent::__construct("hg", "HungerGames " . Info::VERSION . " command", Exc::_("%%a/hg help"), ["sg", "sw"]);
        $this->hungerGamesAPI = $loader;
    }

    /**
     * @param CommandSender $sender
     * @param string    $commandLabel
     * @param string[]      $args
     *
     * @return bool
     */
    public function execute(CommandSender $sender, string $commandLabel, array $args) : bool {
        if (!$sender instanceof Player) {
            $sender->sendMessage(Msg::color("&aPlease run this command in-game."));
            return false;
        }
        if (empty($args[0])) {
            $sender->sendMessage(Msg::color("&a- /hg help"));
            return false;
        }
        switch (strtolower($args[0])) {
            case "help":
                $sender->sendMessage(Msg::color("&aHungerGames Command"));
                $sender->sendMessage(Msg::color("&a- /hg join <game>"));
                $sender->sendMessage(Msg::color("&a- /hg add <game>"));
                $sender->sendMessage(Msg::color("&a- /hg del <game>"));
                $sender->sendMessage(Msg::color("&a- /hg min <game> <number>"));
                $sender->sendMessage(Msg::color("&a- /hg max <game> <number>"));
                $sender->sendMessage(Msg::color("&a- /hg level <game> <level name>"));
                $sender->sendMessage(Msg::color("&a- /hg ws <game> <seconds>"));
                $sender->sendMessage(Msg::color("&a- /hg gs <game> <seconds>"));
                $sender->sendMessage(Msg::color("&a- /hg lobby <game>"));
                $sender->sendMessage(Msg::color("&a- /hg dm <game>"));
                $sender->sendMessage(Msg::color("&a- /hg addslot <game> <name>"));
                $sender->sendMessage(Msg::color("&a- /hg delslot <game> <name>"));
                $sender->sendMessage(Msg::color("&a- /hg leave"));
                break;
            case "add":
                if (!$sender->hasPermission("hg.command.add")) {
                    return false;
                }
                if (empty($args[1])) {
                    $sender->sendMessage(Msg::color("&a- /hg add <game>"));
                    return true;
                }
                $game = $args[1];
                if ($this->hungerGamesAPI->gameResourceExists($game) || $this->hungerGamesAPI->gameArenaExists($game)) {
                    $sender->sendMessage(Msg::color("&cGame already exists!"));
                    return true;
                }
                $game1 = new HungerGames();
                $sender->sendMessage(Msg::color("&aCreating game $game... Please wait..."));
                $game1->loadGame($game1);
                $game1->create($game);
                $this->hungerGamesAPI->getGlobalManager()->load($game1);
                $sender->sendMessage(Msg::color("&aSuccessfully created game " . $game . "!"));
                break;
            case "del":
                if (!$sender->hasPermission("hg.command.del")) {
                    return false;
                }
                if (empty($args[1])) {
                    $sender->sendMessage(Msg::color("&a- /hg del <game>"));
                    return false;
                }
                $game = $args[1];
                if (!$this->hungerGamesAPI->gameResourceExists($game) or !$this->hungerGamesAPI->gameArenaExists($game)) {
                    $sender->sendMessage(Msg::color("&cGame does not exist!"));
                    return false;
                }
                if (empty($args[2])) {
                    $sender->sendMessage(Msg::color("&cAre you sure you want to delete $game? &4&lYOU CAN NOT GET IT BACK!!"));
                    $sender->sendMessage(Msg::color("&aIf you are sure please run: /hg del $game proceed"));
                    return false;
                }
                if (strtolower($args[2]) !== "proceed") {
                    $sender->sendMessage(Msg::color('&aDid you mean "/hg del ' . $game . '"?'));
                    return false;
                }
                $game1 = $this->hungerGamesAPI->getGameResource($game);
                $this->hungerGamesAPI->getGlobalManager()->remove($game1);
                $game1->delete(true);
                $sender->sendMessage(Msg::color("&cGame " . $game . " has been deleted! You can not get it back!"));
                break;
            case "min":
                if (!$sender->hasPermission("hg.command.min")) {
                    return false;
                }
                if (empty($args[1]) || empty($args[2])) {
                    $sender->sendMessage(Msg::color("&a- /hg min <game> <number>"));
                    return false;
                }
                $game = $args[1];
                $number = $args[2];
                if (!$this->hungerGamesAPI->gameResourceExists($game) || !$this->hungerGamesAPI->gameArenaExists($game)) {
                    $sender->sendMessage(Msg::color("&cGame does not exist!"));
                    return false;
                }
                if (!is_numeric($number)) {
                    $sender->sendMessage(Msg::color("&cInvalid int/number value."));
                    return false;
                }
                $game1 = $this->hungerGamesAPI->getGlobalManager()->getGameEditorByName($game);
                $game1->setMinimumPlayers($number);
                $sender->sendMessage(Msg::color("&cMinimum players of game " . $game . " have been set to " . $number . "."));
                break;
            case "max":
                if (!$sender->hasPermission("hg.command.max")) {
                    return false;
                }
                if (empty($args[1]) || empty($args[2])) {
                    $sender->sendMessage(Msg::color("&a- /hg max <game> <number>"));
                    return false;
                }
                $game = $args[1];
                $number = $args[2];
                if (!$this->hungerGamesAPI->gameResourceExists($game) || !$this->hungerGamesAPI->gameArenaExists($game)) {
                    $sender->sendMessage(Msg::color("&cGame does not exist!"));
                    return false;
                }
                if (!is_numeric($number)) {
                    $sender->sendMessage(Msg::color("&cInvalid int/number value."));
                    return false;
                }
                $game1 = $this->hungerGamesAPI->getGlobalManager()->getGameEditorByName($game);
                $game1->setMaximumPlayers($number);
                $sender->sendMessage(Msg::color("&aMaximum players of game " . $game . " have been set to " . $number . "."));
                break;
            case "level":
                if (!$sender->hasPermission("hg.command.level")) {
                    return false;
                }
                if (empty($args[1]) || empty($args[2])) {
                    $sender->sendMessage(Msg::color("&a- /hg level <game> <level name>"));
                    return false;
                }
                $game = $args[1];
                $level = $args[2];
                if (!$this->hungerGamesAPI->gameResourceExists($game) || !$this->hungerGamesAPI->gameArenaExists($game)) {
                    $sender->sendMessage(Msg::color("&cGame does not exist!"));
                    return false;
                }
                $game1 = $this->hungerGamesAPI->getGlobalManager()->getGameEditorByName($game);
                $game1->setGameLevel($level);
                $sender->sendMessage(Msg::color("&aSet game level of " . $game . " to " . $level . "."));
                break;
            case "ws":
                if (!$sender->hasPermission("hg.command.ws")) {
                    return false;
                }
                if (empty($args[1]) || empty($args[2])) {
                    $sender->sendMessage(Msg::color("&a- /hg ws <game> <seconds>"));
                    return false;
                }
                $game = $args[1];
                $seconds = $args[2];
                if (!$this->hungerGamesAPI->gameResourceExists($game) || !$this->hungerGamesAPI->gameArenaExists($game)) {
                    $sender->sendMessage(Msg::color("&cGame does not exist!"));
                    return false;
                }
                if (!is_numeric($seconds)) {
                    $sender->sendMessage(Msg::color("&cInvalid int/number value."));
                    return false;
                }
                $game1 = $this->hungerGamesAPI->getGlobalManager()->getGameEditorByName($game);
                $game1->setWaitingSeconds($seconds);
                $sender->sendMessage(Msg::color("&aSet waiting seconds of game " . $game . " to " . $seconds . "."));
                break;
            case "gs":
                if (!$sender->hasPermission("hg.command.ws")) {
                    return false;
                }
                if (empty($args[1]) || empty($args[2])) {
                    $sender->sendMessage(Msg::color("&a- /hg gs <game> <seconds>"));
                    return false;
                }
                $game = $args[1];
                $seconds = $args[2];
                if (!$this->hungerGamesAPI->gameResourceExists($game) || !$this->hungerGamesAPI->gameArenaExists($game)) {
                    $sender->sendMessage(Msg::color("&cGame does not exist!"));
                    return false;
                }
                if (!is_numeric($seconds)) {
                    $sender->sendMessage(Msg::color("&cInvalid int/number value."));
                    return false;
                }
                $game1 = $this->hungerGamesAPI->getGlobalManager()->getGameEditorByName($game);
                $game1->setWaitingSeconds($seconds);
                $sender->sendMessage(Msg::color("&aSet game seconds of game " . $game . " to " . $seconds . "."));
                break;
            case "addslot":
                if (!$sender->hasPermission("hg.command.slot.add")) {
                    return false;
                }
                if (empty($args[1]) || empty($args[2])) {
                    $sender->sendMessage(Msg::color("&a- /hg addslot <game> <name>"));
                    // return false;
                }
                $game = $args[1];
                $slot = $args[2];
                if (!$this->hungerGamesAPI->gameResourceExists($game) || !$this->hungerGamesAPI->gameArenaExists($game)) {
                    $sender->sendMessage(Msg::color("&cGame does not exist!"));
                    return false;
                }
                $game1 = $this->hungerGamesAPI->getGlobalManager()->getGameEditorByName($game);
                $game1->addSlot($sender, $slot);
                $sender->sendMessage(Msg::color("&aAdded slot " . $slot . " for game " . $game . "."));
                break;
            case "delslot":
                if (!$sender->hasPermission("hg.command.slot.del")) {
                    return false;
                }
                if (empty($args[1]) || empty($args[2])) {
                    $sender->sendMessage(Msg::color("&a- /hg delslot <game> <name>"));
                    return false;
                }
                $game = $args[1];
                $slot = $args[2];
                if (!$this->hungerGamesAPI->gameResourceExists($game) || !$this->hungerGamesAPI->gameArenaExists($game)) {
                    $sender->sendMessage(Msg::color("&cGame does not exist!"));
                    return false;
                }
                $game1 = $this->hungerGamesAPI->getGlobalManager()->getGameEditorByName($game);
                if ($game1->removeSlot($slot)) {
                    $sender->sendMessage(Msg::color("&aDeleted slot " . $slot . " for game " . $game . "."));
                } else {
                    $sender->sendMessage(Msg::color("&cSlot $slot not found for game $game."));
                    return false;
                }
                break;
            case "join":
                if (empty($args[1])) {
                    $sender->sendMessage(Msg::color("&a- /hg delslot <game> <name>"));
                    return false;
                }
                $game = $this->hungerGamesAPI->getGlobalManager()->getGameByName($args[1]);
                if ($game === null) {
                    $sender->sendMessage(Msg::color("&cGame does not exist!"));
                    return false;
                }
                if ($this->hungerGamesAPI->getStorage()->isPlayerSet($sender) || $this->hungerGamesAPI->getStorage()->isPlayerWaiting($sender)) {
                    return false;
                }
                if ($this->hungerGamesAPI->getGlobalManager()->getGameManager($game)->getStatus() === "running" || $this->hungerGamesAPI->getGlobalManager()->getGameManager($game)->getStatus() === "reset") {
                    return false;
                }
                $this->hungerGamesAPI->getGlobalManager()->getGameManager($game)->addWaitingPlayer($sender, true);
                $sender->sendMessage(Msg::color("&aJoining game!"));
                if ($this->hungerGamesAPI->getGlobalManager()->getGameManager($game)->isWaiting) { // checks if task started
                    return false;
                }
                $t = new WaitingForPlayersTask($this->hungerGamesAPI, $game);
                $h = $this->hungerGamesAPI->getScheduler()->scheduleRepeatingTask($t, 20);
                $t->setHandler($h);
                $this->hungerGamesAPI->getGlobalManager()->getGameManager($game)->isWaiting = true;
                break;
            case "leave":
                $p = $sender;
                if ($this->hungerGamesAPI->getStorage()->isPlayerSet($p)) {
                    $game = $this->hungerGamesAPI->getStorage()->getPlayerGame($p);
                    if ($game !== null) {
                        $this->hungerGamesAPI->getGlobalManager()->getGameManager($game)->removePlayer($p, true);
                        $p->sendMessage(Msg::color("&aExiting game..."));
                        return true;
                    }
                } elseif ($this->hungerGamesAPI->getStorage()->isPlayerWaiting($p)) {
                    $game = $this->hungerGamesAPI->getStorage()->getWaitingPlayerGame($p);
                    if ($game !== null) {
                        $this->hungerGamesAPI->getGlobalManager()->getGameManager($game)->removeWaitingPlayer($p, true);
                        $p->sendMessage(Msg::color("&aExiting game..."));
                        return true;
                    }
                } else {
                    $p->sendMessage(Msg::color("&cYou are not playing on any game."));
                    return false;
                }
                break;
            case "lobby":
                if (!$sender->hasPermission("hg.command.lobby")) {
                    return false;
                }
                if (empty($args[1])) {
                    $sender->sendMessage(Msg::color("&a- /hg lobby <game>"));
                    return false;
                }
                $game = $args[1];
                if (!$this->hungerGamesAPI->gameResourceExists($game) || !$this->hungerGamesAPI->gameArenaExists($game)) {
                    $sender->sendMessage(Msg::color("&cGame does not exist!"));
                    return false;
                }
                $this->hungerGamesAPI->getGlobalManager()->getGameEditorByName($game)->setLobbyPosition($sender);
                $sender->sendMessage(Msg::color("&aSuccessfully set lobby position where you are standing!"));
                break;
            case "dm":
                if (!$sender->hasPermission("hg.command.dm")) {
                    return false;
                }
                if (empty($args[1])) {
                    $sender->sendMessage(Msg::color("&a- /hg dm <game>"));
                    return false;
                }
                $game = $args[1];
                if (!$this->hungerGamesAPI->gameResourceExists($game) || !$this->hungerGamesAPI->gameArenaExists($game)) {
                    $sender->sendMessage(Msg::color("&cGame does not exist!"));
                    return false;
                }
                $this->hungerGamesAPI->getGlobalManager()->getGameEditorByName($game)->setDeathMatchPosition($sender);
                $sender->sendMessage(Msg::color("&aSuccessfully set death match position where you are standing!"));
                break;
            default:
                return false;
        }
        return true;
    }

    /**
     * @return Loader
     */
    public function getPlugin() : Plugin {
        return $this->hungerGamesAPI;
    }

}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:20:"\HungerGames\Command";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:20:"\HungerGames\Command";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Command";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:39:"\HungerGames\Command\HungerGamesCommand";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:39:"\HungerGames\Command\HungerGamesCommand";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"HungerGamesCommand";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\pocketmine\command\Command";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Command";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:1:{s:45:"\pocketmine\command\PluginIdentifiableCommand";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:45:"\pocketmine\command\PluginIdentifiableCommand";s:36:" phpDocumentor\Reflection\Fqsen name";s:25:"PluginIdentifiableCommand";}}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:1:{s:56:"\HungerGames\Command\HungerGamesCommand::$hungerGamesAPI";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\HungerGames\Command\HungerGamesCommand::$hungerGamesAPI";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"hungerGamesAPI";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:0:"";s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:19:"\HungerGames\Loader";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"Loader";}}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:19:"HungerGames\Command";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:11:{s:3:"Exc";s:25:"HungerGames\Lib\Utils\Exc";s:4:"Info";s:26:"HungerGames\Lib\Utils\Info";s:3:"Msg";s:25:"HungerGames\Lib\Utils\Msg";s:6:"Loader";s:18:"HungerGames\Loader";s:11:"HungerGames";s:30:"HungerGames\Object\HungerGames";s:21:"WaitingForPlayersTask";s:39:"HungerGames\Tasks\WaitingForPlayersTask";s:7:"Command";s:26:"pocketmine\command\Command";s:13:"CommandSender";s:32:"pocketmine\command\CommandSender";s:25:"PluginIdentifiableCommand";s:44:"pocketmine\command\PluginIdentifiableCommand";s:6:"Player";s:17:"pocketmine\Player";s:6:"Plugin";s:24:"pocketmine\plugin\Plugin";}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:20;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:3:{s:54:"\HungerGames\Command\HungerGamesCommand::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:54:"\HungerGames\Command\HungerGamesCommand::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"loader";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:19:"\HungerGames\Loader";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"Loader";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:22;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:50:"\HungerGames\Command\HungerGamesCommand::execute()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:4:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":5:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"sender";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\pocketmine\command\CommandSender";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"CommandSender";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":5:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:12:"commandLabel";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":5:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:4:"args";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":1:{s:46:" phpDocumentor\Reflection\Types\Compound types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:3;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Boolean":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:51;s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:27;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:50:"\HungerGames\Command\HungerGamesCommand::execute()";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"execute";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"sender";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\pocketmine\command\CommandSender";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"CommandSender";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:12:"commandLabel";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"args";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":1:{s:46:" phpDocumentor\Reflection\Types\Compound types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:34;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Boolean":0:{}}s:52:"\HungerGames\Command\HungerGamesCommand::getPlugin()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:19:"\HungerGames\Loader";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"Loader";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:51;s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:338;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:52:"\HungerGames\Command\HungerGamesCommand::getPlugin()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"getPlugin";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:341;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\pocketmine\plugin\Plugin";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"Plugin";}}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:17;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";